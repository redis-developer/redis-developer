"use strict";(self.webpackChunkredis_developer_hub=self.webpackChunkredis_developer_hub||[]).push([[6563,4074,3482,7310],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=d(n),u=o,h=m["".concat(c,".").concat(u)]||m[u]||p[u]||a;return n?r.createElement(h,i(i({ref:t},l),{},{components:n})):r.createElement(h,i({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50358:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(67294),o=n(52263);const a="authorByline_VoxI",i="authorLabel_a70t",s="authorProfileImage_URwT";const c=function(e){let{frontMatter:t}=e;const{siteConfig:n}=(0,o.Z)(),c=n.customFields.authors;return r.createElement(r.Fragment,null,t.authors&&r.createElement("div",{className:"docAuthors"},r.createElement("hr",null),t.authors.map((e=>r.createElement("div",{key:e,className:a},r.createElement("img",{className:s,src:`/img/${c[e].image?c[e].image:"default_author_profile_pic.png"}`,alt:`Profile picture for ${c[e].name}`}),r.createElement("div",null,r.createElement("div",{className:i},"Author:"),r.createElement("div",null,r.createElement("a",{href:c[e].link,target:"_blank"},c[e].name),", ",c[e].title))))),r.createElement("hr",null)))}},36773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/microservices/common-data/microservices-arch",id:"howtos/solutions/microservices/common-data/microservices-arch",title:"microservices-arch",description:"Lets take a look at the architecture of the demo application:",source:"@site/docs/howtos/solutions/microservices/common-data/microservices-arch.mdx",sourceDirName:"howtos/solutions/microservices/common-data",slug:"/howtos/solutions/microservices/common-data/microservices-arch",permalink:"/howtos/solutions/microservices/common-data/microservices-arch",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/microservices/common-data/microservices-arch.mdx",tags:[],version:"current",lastUpdatedAt:1702551239,formattedLastUpdatedAt:"Dec 14, 2023",frontMatter:{}},c={},d=[],l={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Lets take a look at the architecture of the demo application:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"products service"),": handles querying products from the database and returning them to the frontend"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"orders service"),": handles validating and creating orders"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"order history service"),": handles querying a customer's order history"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"payments service"),": handles processing orders for payment"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"api gateway"),": unifies the services under a single endpoint"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"mongodb/ postgresql"),": serves as the write-optimized database for storing orders, order history, products, etc.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You don't need to use MongoDB/ Postgresql as your write-optimized database in the demo application; you can use other ",(0,o.kt)("u",null,(0,o.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/reference/database-reference/supported-databases"},"prisma supported databases"))," as well. This is just an example.")))}p.isMDXComponent=!0},80990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/vector/common-ai/microservices-ecommerce-ai",id:"howtos/solutions/vector/common-ai/microservices-ecommerce-ai",title:"microservices-ecommerce-ai",description:"The e-commerce microservices application consists of a frontend, built using Next.js with TailwindCSS. The application backend uses Node.js. The data is stored in Redis and either MongoDB or PostgreSQL, using Prisma. Below are screenshots showcasing the frontend of the e-commerce app.",source:"@site/docs/howtos/solutions/vector/common-ai/microservices-ecommerce-ai.mdx",sourceDirName:"howtos/solutions/vector/common-ai",slug:"/howtos/solutions/vector/common-ai/microservices-ecommerce-ai",permalink:"/howtos/solutions/vector/common-ai/microservices-ecommerce-ai",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/vector/common-ai/microservices-ecommerce-ai.mdx",tags:[],version:"current",lastUpdatedAt:1705608576,formattedLastUpdatedAt:"Jan 18, 2024",frontMatter:{}},c={},d=[],l={toc:d};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The e-commerce microservices application consists of a frontend, built using ",(0,o.kt)("a",{parentName:"p",href:"https://nextjs.org/"},"Next.js")," with ",(0,o.kt)("a",{parentName:"p",href:"https://tailwindcss.com/"},"TailwindCSS"),". The application backend uses ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org"},"Node.js"),". The data is stored in ",(0,o.kt)("a",{parentName:"p",href:"https://redis.com/try-free/"},"Redis")," and either MongoDB or PostgreSQL, using ",(0,o.kt)("a",{parentName:"p",href:"https://www.prisma.io/docs/reference/database-reference/supported-databases"},"Prisma"),". Below are screenshots showcasing the frontend of the e-commerce app."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Dashboard:")," Displays a list of products with different search functionalities, configurable in the settings page.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Products Page",src:n(7050).Z,width:"2618",height:"1194"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Settings:")," Accessible by clicking the gear icon at the top right of the dashboard. Control the search bar, chatbot visibility, and other features here.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Settings Page",src:n(8461).Z,width:"1822",height:"956"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Dashboard (Semantic Text Search):"),' Configured for semantic text search, the search bar enables natural language queries. Example: "pure cotton blue shirts."\n',(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Semantic Text Search",src:n(81168).Z,width:"1920",height:"900"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Dashboard (Semantic Image-Based Queries):"),' Configured for semantic image summary search, the search bar allows for image-based queries. Example: "Left chest nike logo."\n',(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Semantic Image Search",src:n(2680).Z,width:"2608",height:"1216"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Chat Bot:")," Located at the bottom right corner of the page, assisting in product searches and detailed views.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Chat Bot",src:n(99609).Z,width:"1920",height:"911"})),(0,o.kt)("p",null,"Selecting a product in the chat displays its details on the dashboard.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Product Details",src:n(73064).Z,width:"2624",height:"1252"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Shopping Cart:"),' Add products to the cart and check out using the "Buy Now" button.\n',(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Shopping Cart",src:n(12224).Z,width:"2624",height:"1244"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Order History:")," Post-purchase, the 'Orders' link in the top navigation bar shows the order status and history.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Order History Page",src:n(14065).Z,width:"2609",height:"674"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Admin Panel:")," Accessible via the 'admin' link in the top navigation. Displays purchase statistics and trending products.\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Admin Page",src:n(37740).Z,width:"2604",height:"1230"}),"\n",(0,o.kt)("img",{alt:"Redis Microservices E-commerce App Frontend - Admin Page",src:n(96127).Z,width:"2608",height:"858"})))}p.isMDXComponent=!0},10992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,s={unversionedId:"howtos/solutions/vector/common-ai/microservices-source-code-ai",id:"howtos/solutions/vector/common-ai/microservices-source-code-ai",title:"microservices-source-code-ai",description:"Below is a command to the clone the source code for the application used in this tutorial",source:"@site/docs/howtos/solutions/vector/common-ai/microservices-source-code-ai.mdx",sourceDirName:"howtos/solutions/vector/common-ai",slug:"/howtos/solutions/vector/common-ai/microservices-source-code-ai",permalink:"/howtos/solutions/vector/common-ai/microservices-source-code-ai",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/vector/common-ai/microservices-source-code-ai.mdx",tags:[],version:"current",lastUpdatedAt:1705611366,formattedLastUpdatedAt:"Jan 18, 2024",frontMatter:{}},c={},d=[],l={toc:d};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"GITHUB CODE",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Below is a command to the clone the source code for the application used in this tutorial"),(0,o.kt)("p",{parentName:"admonition"},"git clone --branch v9.2.0 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/redis-developer/redis-microservices-ecommerce-solutions"},"https://github.com/redis-developer/redis-microservices-ecommerce-solutions"))))}p.isMDXComponent=!0},14096:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>g,frontMatter:()=>d,metadata:()=>p,toc:()=>u});var r=n(87462),o=(n(67294),n(3905)),a=n(50358),i=n(36773),s=n(80990),c=n(10992);const d={id:"index-semantic-text-search",title:"Semantic Text Search Using LangChain (OpenAI) and Redis",sidebar_label:"Semantic Text Search Using LangChain (OpenAI) and Redis",slug:"/howtos/solutions/vector/semantic-text-search",authors:["prasan","will"]},l=void 0,p={unversionedId:"howtos/solutions/vector/semantic-text-search/index-semantic-text-search",id:"howtos/solutions/vector/semantic-text-search/index-semantic-text-search",title:"Semantic Text Search Using LangChain (OpenAI) and Redis",description:"What you will learn in this tutorial",source:"@site/docs/howtos/solutions/vector/semantic-text-search/index-semantic-text-search.mdx",sourceDirName:"howtos/solutions/vector/semantic-text-search",slug:"/howtos/solutions/vector/semantic-text-search",permalink:"/howtos/solutions/vector/semantic-text-search",draft:!1,editUrl:"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/solutions/vector/semantic-text-search/index-semantic-text-search.mdx",tags:[],version:"current",lastUpdatedAt:1705611366,formattedLastUpdatedAt:"Jan 18, 2024",frontMatter:{id:"index-semantic-text-search",title:"Semantic Text Search Using LangChain (OpenAI) and Redis",sidebar_label:"Semantic Text Search Using LangChain (OpenAI) and Redis",slug:"/howtos/solutions/vector/semantic-text-search",authors:["prasan","will"]},sidebar:"docs",previous:{title:"How to Build a GenAI Chatbot Using LangChain and Redis",permalink:"/howtos/solutions/vector/gen-ai-chatbot"},next:{title:"Semantic Image Based Queries Using LangChain (OpenAI) and Redis",permalink:"/howtos/solutions/vector/image-summary-search"}},m={},u=[{value:"What you will learn in this tutorial",id:"what-you-will-learn-in-this-tutorial",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Microservices architecture for an e-commerce application",id:"microservices-architecture-for-an-e-commerce-application",level:2},{value:"E-commerce application frontend using Next.js and Tailwind",id:"e-commerce-application-frontend-using-nextjs-and-tailwind",level:2},{value:"Database setup",id:"database-setup",level:2},{value:"Sample data",id:"sample-data",level:3},{value:"Seeding product details embeddings",id:"seeding-product-details-embeddings",level:3},{value:"Setting up the search API",id:"setting-up-the-search-api",level:2},{value:"API end point",id:"api-end-point",level:3},{value:"API implementation",id:"api-implementation",level:3},{value:"Frontend UI",id:"frontend-ui",level:3},{value:"Ready to use Redis for semantic text search?",id:"ready-to-use-redis-for-semantic-text-search",level:2},{value:"Further reading",id:"further-reading",level:2}],h={toc:u};function g(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,r.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(a.Z,{frontMatter:d,mdxType:"Authors"}),(0,o.kt)("h2",{id:"what-you-will-learn-in-this-tutorial"},"What you will learn in this tutorial"),(0,o.kt)("p",null,"This tutorial explores the implementation of semantic text search in product descriptions using LangChain (OpenAI) and Redis. The focus areas include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Contextualizing E-Commerce"),": Dive into an e-commerce scenario where semantic text search empowers users to find products through detailed textual queries."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Database Implementation"),": Learn to create and store semantic embeddings from product descriptions in Redis for efficient search capabilities."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Search API Development"),": Understand how to build an API that leverages OpenAI for semantic analysis of text and Redis for data management.")),(0,o.kt)("h2",{id:"terminology"},"Terminology"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://js.langchain.com"},"LangChain")),": A versatile library for developing language model applications, combining language models, storage systems, and custom logic."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://openai.com/"},"OpenAI")),": A provider of cutting-edge language models like GPT-3, essential for applications in semantic search and conversational AI.")),(0,o.kt)("h2",{id:"microservices-architecture-for-an-e-commerce-application"},"Microservices architecture for an e-commerce application"),(0,o.kt)(c.default,{mdxType:"SourceCode"}),(0,o.kt)(i.default,{mdxType:"InitialMicroservicesArchitecture"}),(0,o.kt)("h2",{id:"e-commerce-application-frontend-using-nextjs-and-tailwind"},"E-commerce application frontend using Next.js and Tailwind"),(0,o.kt)(s.default,{mdxType:"MicroservicesEcommerceAIDesign"}),(0,o.kt)("h2",{id:"database-setup"},"Database setup"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Sign up for an ",(0,o.kt)("u",null,(0,o.kt)("a",{parentName:"p",href:"https://platform.openai.com/"},"OpenAI account"))," to get your API key to be used in the demo (add OPEN_AI_API_KEY variable in .env file). You can also refer to the ",(0,o.kt)("u",null,(0,o.kt)("a",{parentName:"p",href:"https://platform.openai.com/docs/api-reference/introduction"},"OpenAI API documentation"))," for more information.")),(0,o.kt)(c.default,{mdxType:"SourceCode"}),(0,o.kt)("h3",{id:"sample-data"},"Sample data"),(0,o.kt)("p",null,"Consider a simplified e-commerce dataset featuring product details for semantic search."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="database/fashion-dataset/001/products/*.json"',title:'"database/fashion-dataset/001/products/*.json"'},"const products = [\n  {\n    productId: '11000',\n    price: 3995,\n    productDisplayName: 'Puma Men Slick 3HD Yellow Black Watches',\n    variantName: 'Slick 3HD Yellow',\n    brandName: 'Puma',\n    ageGroup: 'Adults-Men',\n    gender: 'Men',\n    displayCategories: 'Accessories',\n    masterCategory_typeName: 'Accessories',\n    subCategory_typeName: 'Watches',\n    styleImages_default_imageURL:\n      'http://host.docker.internal:8080/images/11000.jpg',\n    productDescriptors_description_value: 'Stylish and comfortable, ...',\n    stockQty: 25,\n  },\n  //...\n];\n")),(0,o.kt)("h3",{id:"seeding-product-details-embeddings"},"Seeding product details embeddings"),(0,o.kt)("p",null,"Implement the ",(0,o.kt)("inlineCode",{parentName:"p"},"addEmbeddingsToRedis")," function to integrate AI-generated product description embeddings with Redis."),(0,o.kt)("p",null,"This process involves two main steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Generating Vector Documents"),": Utilizing the ",(0,o.kt)("inlineCode",{parentName:"p"},"convertToVectorDocuments")," function, we transform product details into vector documents. This transformation is crucial as it converts product details into a format suitable for Redis storage.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Seeding Embeddings into Redis"),": The ",(0,o.kt)("inlineCode",{parentName:"p"},"seedOpenAIEmbeddings")," function is then employed to store these vector documents into Redis. This step is essential for enabling efficient retrieval and search capabilities within the Redis database."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Document } from 'langchain/document';\nimport { OpenAIEmbeddings } from 'langchain/embeddings/openai';\nimport { RedisVectorStore } from 'langchain/vectorstores/redis';\n\nconst convertToVectorDocuments = async (\n  _products: Prisma.ProductCreateInput[],\n) => {\n  const vectorDocs: Document[] = [];\n\n  if (_products?.length > 0) {\n    for (let product of _products) {\n      let doc = new Document({\n        metadata: {\n          productId: product.productId,\n        },\n        pageContent: ` Product details are as follows:\n                productId: ${product.productId}.\n    \n                productDisplayName: ${product.productDisplayName}.\n                \n                price: ${product.price}.\n    \n                variantName: ${product.variantName}.\n    \n                brandName: ${product.brandName}.\n    \n                ageGroup: ${product.ageGroup}.\n    \n                gender: ${product.gender}.\n    \n                productColors: ${product.productColors}\n    \n                Category:  ${product.displayCategories}, ${product.masterCategory_typeName} - ${product.subCategory_typeName}\n    \n                productDescription:  ${product.productDescriptors_description_value}`,\n      });\n\n      vectorDocs.push(doc);\n    }\n  }\n  return vectorDocs;\n};\n\nconst seedOpenAIEmbeddings = async (\n  vectorDocs: Document[],\n  _redisClient: NodeRedisClientType,\n  _openAIApiKey: string,\n) => {\n  if (vectorDocs?.length && _redisClient && _openAIApiKey) {\n    console.log('openAIEmbeddings started !');\n\n    const embeddings = new OpenAIEmbeddings({\n      openAIApiKey: _openAIApiKey,\n    });\n    const vectorStore = await RedisVectorStore.fromDocuments(\n      vectorDocs,\n      embeddings,\n      {\n        redisClient: _redisClient,\n        indexName: 'openAIProductsIdx',\n        keyPrefix: 'openAIProducts:',\n      },\n    );\n    console.log('OpenAIEmbeddings completed');\n  }\n};\n\nconst addEmbeddingsToRedis = async (\n  _products: Prisma.ProductCreateInput[],\n  _redisClient: NodeRedisClientType,\n  _openAIApiKey: string,\n  _huggingFaceApiKey?: string,\n) => {\n  if (_products?.length > 0 && _redisClient && _openAIApiKey) {\n    const vectorDocs = await convertToVectorDocuments(_products);\n\n    await seedOpenAIEmbeddings(vectorDocs, _redisClient, _openAIApiKey);\n  }\n};\n")),(0,o.kt)("p",null,"Examine the structured ",(0,o.kt)("inlineCode",{parentName:"p"},"openAI product details")," within Redis using RedisInsight."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Redis Insight AI products",src:n(94221).Z,width:"2320",height:"1424"})),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Download ",(0,o.kt)("u",null,(0,o.kt)("a",{parentName:"p",href:"https://redis.com/redis-enterprise/redis-insight/"},"RedisInsight"))," to visually explore your Redis data or to engage with raw Redis commands in the workbench.")),(0,o.kt)("h2",{id:"setting-up-the-search-api"},"Setting up the search API"),(0,o.kt)("h3",{id:"api-end-point"},"API end point"),(0,o.kt)("p",null,"This section covers the API request and response structure for ",(0,o.kt)("inlineCode",{parentName:"p"},"getProductsByVSSText"),", which is essential for retrieving products based on semantic text search."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Request Format")),(0,o.kt)("p",null,"The example request format for the API is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'POST http://localhost:3000/products/getProductsByVSSText\n{\n   "searchText":"pure cotton blue shirts",\n\n   //optional\n   "maxProductCount": 4, // 2 (default)\n   "similarityScoreLimit":0.2, // 0.2 (default)\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Response Structure")),(0,o.kt)("p",null,"The response from the API is a JSON object containing an array of product details that match the semantic search criteria:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "productId": "11031",\n      "price": 1099,\n      "productDisplayName": "Jealous 21 Women Check Blue Tops",\n      "productDescriptors_description_value": "Composition : Green and navy blue checked round neck blouson tunic top made of 100% cotton, has a full buttoned placket, three fourth sleeves with buttoned cuffs and a belt below the waist<br /><br /><strong>Fitting</strong><br />Regular<br /><br /><strong>Wash care</strong><br />Machine/hand wash separately in mild detergent<br />Do not bleach or wring<br />Dry in shade<br />Medium iron<br /><br />If you\'re in the mood to have some checked fun, this blouson tunic top from jealous 21 will fulfil your heart\'s desire with &eacute;lan. The cotton fabric promises comfort, while the smart checks guarantee unparalleled attention. Pair this top with leggings and ballerinas for a cute, neat look.<br /><br /><em>Model statistics</em><br />The model wears size M in tops<br />Height: 5\'7\\"; Chest: 33\\"; Waist: 25\\"</p>",\n      "stockQty": 25,\n      "productColors": "Blue,Green",\n      "similarityScore": 0.168704152107\n      //...\n    }\n  ],\n  "error": null,\n  "auth": "SES_fd57d7f4-3deb-418f-9a95-6749cd06e348"\n}\n')),(0,o.kt)("h3",{id:"api-implementation"},"API implementation"),(0,o.kt)("p",null,"The backend implementation of this API involves following steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"getProductsByVSSText")," function handles the API Request."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"getSimilarProductsScoreByVSS")," function performs semantic search on product details. It integrates with ",(0,o.kt)("inlineCode",{parentName:"li"},"OpenAI's")," semantic analysis capabilities to interpret the searchText and identify relevant products from ",(0,o.kt)("inlineCode",{parentName:"li"},"Redis")," vector store.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/src/services/products/src/open-ai-prompt.ts"',title:'"server/src/services/products/src/open-ai-prompt.ts"'},"const getSimilarProductsScoreByVSS = async (\n  _params: IParamsGetProductsByVSS,\n) => {\n  let {\n    standAloneQuestion,\n    openAIApiKey,\n\n    //optional\n    KNN,\n    scoreLimit,\n  } = _params;\n\n  let vectorDocs: Document[] = [];\n  const client = getNodeRedisClient();\n\n  KNN = KNN || 2;\n  scoreLimit = scoreLimit || 1;\n\n  let embeddings = new OpenAIEmbeddings({\n    openAIApiKey: openAIApiKey,\n  });\n  let indexName = 'openAIProductsIdx';\n  let keyPrefix = 'openAIProducts:';\n\n  if (embeddings) {\n    // create vector store\n    const vectorStore = new RedisVectorStore(embeddings, {\n      redisClient: client,\n      indexName: indexName,\n      keyPrefix: keyPrefix,\n    });\n\n    // search for similar products\n    const vectorDocsWithScore = await vectorStore.similaritySearchWithScore(\n      standAloneQuestion,\n      KNN,\n    );\n\n    // filter by scoreLimit\n    for (let [doc, score] of vectorDocsWithScore) {\n      if (score <= scoreLimit) {\n        doc['similarityScore'] = score;\n        vectorDocs.push(doc);\n      }\n    }\n  }\n\n  return vectorDocs;\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="server/src/services/products/src/service-impl.ts"',title:'"server/src/services/products/src/service-impl.ts"'},"const getProductsByVSSText = async (\n  productsVSSFilter: IProductsVSSBodyFilter,\n) => {\n  let { searchText, maxProductCount, similarityScoreLimit } = productsVSSFilter;\n  let products: IProduct[] = [];\n\n  const openAIApiKey = process.env.OPEN_AI_API_KEY || '';\n  maxProductCount = maxProductCount || 2;\n  similarityScoreLimit = similarityScoreLimit || 0.2;\n\n  if (!openAIApiKey) {\n    throw new Error('Please provide openAI API key in .env file');\n  }\n\n  if (!searchText) {\n    throw new Error('Please provide search text');\n  }\n\n  //VSS search\n  const vectorDocs = await getSimilarProductsScoreByVSS({\n    standAloneQuestion: searchText,\n    openAIApiKey: openAIApiKey,\n    KNN: maxProductCount,\n    scoreLimit: similarityScoreLimit,\n  });\n\n  if (vectorDocs?.length) {\n    const productIds = vectorDocs.map((doc) => doc?.metadata?.productId);\n\n    //get product with details\n    products = await getProductByIds(productIds, true);\n  }\n\n  //...\n\n  return products;\n};\n")),(0,o.kt)("h3",{id:"frontend-ui"},"Frontend UI"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Settings configuration"),": Enable ",(0,o.kt)("inlineCode",{parentName:"p"},"Semantic text search")," in the settings page\n",(0,o.kt)("img",{alt:"settings page",src:n(64254).Z,width:"1826",height:"1206"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Performing a search"),": Use textual queries on the dashboard.\n",(0,o.kt)("img",{alt:"search page",src:n(44320).Z,width:"1920",height:"900"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("i",null,"Note:")," Users can click on the product description within the product card to view the complete details.")),(0,o.kt)("h2",{id:"ready-to-use-redis-for-semantic-text-search"},"Ready to use Redis for semantic text search?"),(0,o.kt)("p",null,"Discover the power of semantic text search for enhancing the e-commerce experience. This tutorial guides you through integrating OpenAI's semantic capabilities with Redis for a dynamic product search engine."),(0,o.kt)("h2",{id:"further-reading"},"Further reading"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/howtos/solutions/vector/getting-started-vector"},"Perform vector similarity search using Redis"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/howtos/solutions/vector/image-summary-search"},"Semantic Image Based Queries Using LangChain (OpenAI) and Redis"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://js.langchain.com/docs/get_started/quickstart"},"LangChain JS")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://scrimba.com/learn/langchain"},"Learn LangChain")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://js.langchain.com/docs/integrations/vectorstores/redis"},"LangChain redis integration")))))}g.isMDXComponent=!0},2680:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/01-dashboard-semantic-image-770befcd5c2129a025fc5fe9058d286f.png"},81168:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/01-dashboard-semantic-text-e92f1bb2c539726c3125969a90d5a5d0.png"},7050:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/01-dashboard-41b6a52ee5d36a9db8b513d285f1d826.png"},99609:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/02-ai-bot-d5546b6243f616636d6f1b5de453d167.png"},73064:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/03-ai-bot-product-ed8e13e4a32f72b952d683473a4c4d0f.png"},12224:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/04-ai-product-shopping-cart-5445685389780e76ba7135e47f0ad20b.png"},14065:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/05-order-history-fa1ebafcf8ac4ee027f5616a00044ee9.png"},37740:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/06-admin-charts-5ae00e6182be0b4ada06049f5d18d0aa.png"},96127:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/07-admin-top-trending-941390270b22d7b4243b386af50ec743.png"},8461:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/08-settings-ai-3e13b6cf77c050ec54d6b444f47624bc.png"},64254:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/01-ui-settings2-6ee14e85462dccc0cf3bfe463076c403.png"},44320:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/02-ui-image-search2-e92f1bb2c539726c3125969a90d5a5d0.png"},94221:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/redis-insight-ai-product-details-a96b09c9e51a5d23cab2a3140e6cf4d5.png"}}]);